{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pranavpp\\\\Documents\\\\Apps\\\\ReactJS\\\\Projects\\\\21-Routing\\\\Project-Practice\\\\frontend\\\\src\\\\Pages\\\\NewEventPage.jsx\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const repsonse = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      'Content-Type': \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!repsonse.ok) {\n    throw json({\n      message: \"Could not save the event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","Fragment","_Fragment","NewEventPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","repsonse","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["C:/Users/pranavpp/Documents/Apps/ReactJS/Projects/21-Routing/Project-Practice/frontend/src/Pages/NewEventPage.jsx"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\r\nimport EventForm from \"../components/EventForm\";\r\n\r\n\r\nexport default function NewEventPage() {\r\n\r\n    return(\r\n        <>\r\n            <EventForm />\r\n        </>\r\n    );\r\n}\r\n\r\nexport async function action({request, params}) {\r\n    const data = await request.formData();\r\n    const eventData =  {\r\n        title : data.get('title'),\r\n        image : data.get('image'),\r\n        date : data.get('date'),\r\n        description : data.get('description'),\r\n    }\r\n    const repsonse = await fetch(\"http://localhost:8080/events\",{\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type' : \"application/json\"\r\n        },\r\n        body: JSON.stringify(eventData)\r\n    })\r\n\r\n    if(!repsonse.ok){\r\n        throw json({message: \"Could not save the event.\"}, {status: 500})\r\n    }\r\n\r\n    return redirect('/events')\r\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGhD,eAAe,SAASC,YAAYA,CAAA,EAAG;EAEnC,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACIJ,OAAA,CAACF,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACf,CAAC;AAEX;AAACC,EAAA,GAPuBN,YAAY;AASpC,OAAO,eAAeO,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC5C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAI;IACfC,KAAK,EAAGH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACzBC,KAAK,EAAGL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACzBE,IAAI,EAAGN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACvBG,WAAW,EAAGP,IAAI,CAACI,GAAG,CAAC,aAAa;EACxC,CAAC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAC;IACxDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAG;IACrB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAG,CAACM,QAAQ,CAACO,EAAE,EAAC;IACZ,MAAMhC,IAAI,CAAC;MAACiC,OAAO,EAAE;IAA2B,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACrE;EAEA,OAAOjC,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC,IAAAY,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}