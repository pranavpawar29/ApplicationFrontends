{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pranavpp\\\\Documents\\\\Apps\\\\ReactJS\\\\Projects\\\\21-Routing\\\\Project-Practice\\\\frontend\\\\src\\\\Pages\\\\EventsPage.jsx\",\n  _s = $RefreshSig$();\nimport { Await, defer, json, useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 30\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n  // if(data.isError) {\n  //   return <>\n  //     <p>{data.message}</p>\n  //   </>\n  // }\n  // const events = data.events;\n  // return (\n  //   <>\n  //     <EventsList events={events} />\n  //   </>\n  // );\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events\"}\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), { status: 500, });\n    return json({\n      message: \"Could not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  defer({\n    events: loadEvents()\n  });\n}\n\n// export async function loader() {\n//   const response = await fetch('http://localhost:8080/events');\n\n//   if (!response.ok) {\n\n//   } else {\n//     const resData = await response.json();\n//     const res = new Response('any data', { status: 201 });\n//   }\n// }\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Await","defer","json","useLoaderData","EventsList","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["C:/Users/pranavpp/Documents/Apps/ReactJS/Projects/21-Routing/Project-Practice/frontend/src/Pages/EventsPage.jsx"],"sourcesContent":["import { Await, defer, json, useLoaderData } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\nimport { Suspense } from 'react';\r\n\r\nfunction EventsPage() {\r\n  const { events } = useLoaderData();\r\n  return <Suspense fallback={<p style={{textAlign: 'center'}}>Loading.....</p>}>\r\n    <Await resolve={events}>\r\n      {(loadedEvents) => <EventsList events={loadedEvents} />} \r\n    </Await>\r\n  </Suspense>\r\n  // if(data.isError) {\r\n  //   return <>\r\n  //     <p>{data.message}</p>\r\n  //   </>\r\n  // }\r\n  // const events = data.events;\r\n  // return (\r\n  //   <>\r\n  //     <EventsList events={events} />\r\n  //   </>\r\n  // );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents() {\r\n\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!response.ok) {\r\n    // return { isError: true, message: \"Could not fetch events\"}\r\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), { status: 500, });\r\n    return json({ message: \"Could not fetch events\" }, { status: 500, })\r\n  } else {\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport function loader() {\r\n  defer({\r\n    events: loadEvents()\r\n  })\r\n}\r\n\r\n// export async function loader() {\r\n//   const response = await fetch('http://localhost:8080/events');\r\n\r\n//   if (!response.ok) {\r\n\r\n//   } else {\r\n//     const resData = await response.json();\r\n//     const res = new Response('any data', { status: 201 });\r\n//   }\r\n// }"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAO,CAAC,GAAGP,aAAa,CAAC,CAAC;EAClC,oBAAOI,OAAA,CAACF,QAAQ;IAACM,QAAQ,eAAEJ,OAAA;MAAGK,KAAK,EAAE;QAACC,SAAS,EAAE;MAAQ,CAAE;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eAC3EP,OAAA,CAACP,KAAK;MAACmB,OAAO,EAAET,MAAO;MAAAI,QAAA,EACnBM,YAAY,iBAAKb,OAAA,CAACH,UAAU;QAACM,MAAM,EAAEU;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;EACX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACT,EAAA,CAlBQD,UAAU;EAAA,QACEL,aAAa;AAAA;AAAAkB,EAAA,GADzBb,UAAU;AAoBnB,eAAeA,UAAU;AAEzB,eAAec,UAAUA,CAAA,EAAG;EAE1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA,OAAOvB,IAAI,CAAC;MAAEwB,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC,CAAC;EACtE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AAEF;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvB3B,KAAK,CAAC;IACJS,MAAM,EAAEY,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}