{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pranavpp\\\\Documents\\\\Apps\\\\ReactJS\\\\Projects\\\\21-Routing\\\\Project-Practice\\\\frontend\\\\src\\\\Pages\\\\EventsPage.jsx\",\n  _s = $RefreshSig$();\nimport { defer, json, useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  // if(data.isError) {\n  //   return <>\n  //     <p>{data.message}</p>\n  //   </>\n  // }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch events\"}\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), { status: 500, });\n    return json({\n      message: \"Could not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  defer({\n    events: loadEvents()\n  });\n}\n\n// export async function loader() {\n//   const response = await fetch('http://localhost:8080/events');\n\n//   if (!response.ok) {\n\n//   } else {\n//     const resData = await response.json();\n//     const res = new Response('any data', { status: 201 });\n//   }\n// }\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["defer","json","useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["C:/Users/pranavpp/Documents/Apps/ReactJS/Projects/21-Routing/Project-Practice/frontend/src/Pages/EventsPage.jsx"],"sourcesContent":["import { defer, json, useLoaderData } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n  // if(data.isError) {\r\n  //   return <>\r\n  //     <p>{data.message}</p>\r\n  //   </>\r\n  // }\r\n  const events = data.events;\r\n  return (\r\n    <>\r\n      <EventsList events={events} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents() {\r\n\r\n  const response = await fetch('http://localhost:8080/events');\r\n\r\n  if (!response.ok) {\r\n    // return { isError: true, message: \"Could not fetch events\"}\r\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), { status: 500, });\r\n    return json({ message: \"Could not fetch events\" }, { status: 500, })\r\n  } else {\r\n    return response;\r\n  }\r\n\r\n}\r\n\r\nexport function loader() {\r\n  defer({\r\n    events: loadEvents()\r\n  })\r\n}\r\n\r\n// export async function loader() {\r\n//   const response = await fetch('http://localhost:8080/events');\r\n\r\n//   if (!response.ok) {\r\n\r\n//   } else {\r\n//     const resData = await response.json();\r\n//     const res = new Response('any data', { status: 201 });\r\n//   }\r\n// }"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AAC7D,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5B;EACA;EACA;EACA;EACA;EACA,MAAMS,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACP,EAAA,CAbQD,UAAU;EAAA,QACJN,aAAa;AAAA;AAAAe,EAAA,GADnBT,UAAU;AAenB,eAAeA,UAAU;AAEzB,eAAeU,UAAUA,CAAA,EAAG;EAE1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA,OAAOpB,IAAI,CAAC;MAAEqB,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC,CAAC;EACtE,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AAEF;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvBxB,KAAK,CAAC;IACJW,MAAM,EAAEO,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}