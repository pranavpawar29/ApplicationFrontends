{"ast":null,"code":"import { cartActions } from \"./cart-slice\";\nimport { uiActions } from \"./ui-slice\";\nexport function fetchCartData() {\n  return async dispatch => {\n    async function fetchData() {\n      const response = await fetch(\"https://react-project-59a16-default-rtdb.firebaseio.com/cart.json\");\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const resData = await response.json();\n      return resData;\n    }\n    try {\n      const data = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: data.items || [],\n        totalQuantity: data.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Fetching cart data failed\"\n      }));\n    }\n  };\n}\nexport function sendCartData(cart) {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending....\",\n      message: \"Sending cart data\"\n    }));\n    async function sendRequest() {\n      const response = await fetch(\"https://react-project-59a16-default-rtdb.firebaseio.com/cart.json\", {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    }\n    try {\n      await sendRequest();\n      //const resData = await response.json();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success....\",\n        message: \"Sent cart data Successfully\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Sending cart data failed\"\n      }));\n    }\n  };\n}","map":{"version":3,"names":["cartActions","uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","resData","json","data","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["C:/Users/pranavpp/Documents/ReactJS/Projects/20-Advance-Redux/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from \"./cart-slice\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nexport function fetchCartData() {\r\n    return async dispatch => {\r\n        async function fetchData(){\r\n            const response = await fetch(\"https://react-project-59a16-default-rtdb.firebaseio.com/cart.json\");\r\n            if(!response.ok){\r\n                throw new Error('Could not fetch cart data!');\r\n            }\r\n            const resData = await response.json();\r\n            return resData;\r\n        }\r\n\r\n        try {\r\n            const data = await fetchData();\r\n            dispatch(cartActions.replaceCart({\r\n                items: data.items || [],\r\n                totalQuantity: data.totalQuantity\r\n            }));\r\n        } catch (error) {\r\n            dispatch(uiActions.showNotification({\r\n                status: \"error\",\r\n                title: \"Error\",\r\n                message: \"Fetching cart data failed\"\r\n            }))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function sendCartData(cart) {\r\n    return async (dispatch) => {\r\n        dispatch(uiActions.showNotification({\r\n            status: \"pending\",\r\n            title: \"Sending....\",\r\n            message: \"Sending cart data\"\r\n        }));\r\n\r\n        async function sendRequest() {\r\n            const response = await fetch(\"https://react-project-59a16-default-rtdb.firebaseio.com/cart.json\", {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    items: cart.items,\r\n                    totalQuantity: cart.totalQuantity\r\n                })\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error('Sending cart data failed.')\r\n            }\r\n        }\r\n\r\n        try {\r\n            await sendRequest();\r\n            //const resData = await response.json();\r\n            dispatch(uiActions.showNotification({\r\n                status: \"success\",\r\n                title: \"Success....\",\r\n                message: \"Sent cart data Successfully\"\r\n            }))\r\n        } catch (error) {\r\n            dispatch(uiActions.showNotification({\r\n                status: \"error\",\r\n                title: \"Error\",\r\n                message: \"Sending cart data failed\"\r\n            }))\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAO,SAASC,aAAaA,CAAA,EAAG;EAC5B,OAAO,MAAMC,QAAQ,IAAI;IACrB,eAAeC,SAASA,CAAA,EAAE;MACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAmE,CAAC;MACjG,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MACjD;MACA,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACrC,OAAOD,OAAO;IAClB;IAEA,IAAI;MACA,MAAME,IAAI,GAAG,MAAMP,SAAS,CAAC,CAAC;MAC9BD,QAAQ,CAACH,WAAW,CAACY,WAAW,CAAC;QAC7BC,KAAK,EAAEF,IAAI,CAACE,KAAK,IAAI,EAAE;QACvBC,aAAa,EAAEH,IAAI,CAACG;MACxB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZZ,QAAQ,CAACF,SAAS,CAACe,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;AACL;AAGA,OAAO,SAASC,YAAYA,CAACC,IAAI,EAAE;EAC/B,OAAO,MAAOlB,QAAQ,IAAK;IACvBA,QAAQ,CAACF,SAAS,CAACe,gBAAgB,CAAC;MAChCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,aAAa;MACpBC,OAAO,EAAE;IACb,CAAC,CAAC,CAAC;IAEH,eAAeG,WAAWA,CAAA,EAAG;MACzB,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAmE,EAAE;QAC9FiB,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBb,KAAK,EAAEQ,IAAI,CAACR,KAAK;UACjBC,aAAa,EAAEO,IAAI,CAACP;QACxB,CAAC;MACL,CAAC,CAAC;MACF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAChD;IACJ;IAEA,IAAI;MACA,MAAMc,WAAW,CAAC,CAAC;MACnB;MACAnB,QAAQ,CAACF,SAAS,CAACe,gBAAgB,CAAC;QAChCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZZ,QAAQ,CAACF,SAAS,CAACe,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,OAAO;QACdC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}